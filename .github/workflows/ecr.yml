name: Build & Push to ECR

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # required for OIDC

    env:
      AWS_REGION: us-east-1
      WEB_REPO: clo835-webapp
      MYSQL_REPO: clo835-mysql
      IMAGE_TAG: v0.1
      SHA_TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (assume LabRole via OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::905418146033:role/LabRole
          role-session-name: github-actions

      - name: Confirm identity
        run: aws sts get-caller-identity

      - name: Ensure ECR repositories exist
        shell: bash
        run: |
          set -euo pipefail
          for REPO in "${WEB_REPO}" "${MYSQL_REPO}"; do
            if ! aws ecr describe-repositories --repository-names "$REPO" >/dev/null 2>&1; then
              echo "Creating ECR repo $REPO"
              aws ecr create-repository --repository-name "$REPO" >/dev/null
            else
              echo "ECR repo $REPO already exists"
            fi
          done

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push web image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          set -e
          docker build -t "${REGISTRY}/${WEB_REPO}:${IMAGE_TAG}" -t "${REGISTRY}/${WEB_REPO}:${SHA_TAG::7}" -f Dockerfile .
          docker push "${REGISTRY}/${WEB_REPO}:${IMAGE_TAG}"
          docker push "${REGISTRY}/${WEB_REPO}:${SHA_TAG::7}"

      - name: Build & push mysql image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          set -e
          docker build -t "${REGISTRY}/${MYSQL_REPO}:${IMAGE_TAG}" -t "${REGISTRY}/${MYSQL_REPO}:${SHA_TAG::7}" -f Dockerfile_mysql .
          docker push "${REGISTRY}/${MYSQL_REPO}:${IMAGE_TAG}"
          docker push "${REGISTRY}/${MYSQL_REPO}:${SHA_TAG::7}"
